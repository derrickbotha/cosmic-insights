import React, { useState, useRef, useEffect } from 'react';
import AIService from '../services/aiService';

/**
 * AIChatInterface component
 * Provides a chat interface for interacting with the AI astrologer
 */
const AIChatInterface = ({ userData, userTier = 'free', chatMessagesToday = 0, chatLimit = 5, onSendMessage, canSendMessage = true }) => {
  const [messages, setMessages] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [showUpgradeModal, setShowUpgradeModal] = useState(false);
  const messagesEndRef = useRef(null);
  const aiService = new AIService('claudeSonnet4'); // Use Claude Sonnet 4 by default

  // Scroll to bottom of messages
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // Send message to AI and get response
  const sendMessage = async (e) => {
    e.preventDefault();
    
    if (!inputValue.trim()) return;
    
    // Check if user has reached daily limit
    if (!canSendMessage) {
      setShowUpgradeModal(true);
      return;
    }
    
    // Add user message to chat
    const userMessage = {
      type: 'user',
      content: inputValue,
      timestamp: new Date()
    };
    
    setMessages(prevMessages => [...prevMessages, userMessage]);
    setInputValue('');
    setIsLoading(true);

    try {
      // Get response from AI
      const response = await aiService.generateResponse(inputValue);
      
      // Add AI response to chat
      const aiMessage = {
        type: 'ai',
        content: response.text,
        model: response.model,
        timestamp: new Date()
      };
      
      setMessages(prevMessages => [...prevMessages, aiMessage]);
      
      // Increment chat count
      if (onSendMessage) {
        onSendMessage();
      }
    } catch (error) {
      console.error('Failed to get AI response:', error);
      
      // Add error message to chat
      const errorMessage = {
        type: 'system',
        content: 'Sorry, I couldn\'t process your request. Please try again later.',
        timestamp: new Date()
      };
      
      setMessages(prevMessages => [...prevMessages, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="flex flex-col h-full bg-background-light dark:bg-background-dark text-foreground-light dark:text-foreground-dark">
      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {messages.length === 0 ? (
          <div className="flex justify-center items-center h-full">
            <div className="text-center">
              <div className="inline-block p-4 bg-primary/10 dark:bg-primary/20 rounded-full mb-4">
                <svg className="h-10 w-10 text-primary" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" strokeLinecap="round" strokeLinejoin="round"></path>
                </svg>
              </div>
              <h2 className="text-2xl font-bold">Welcome to your AI Astrologer</h2>
              <p className="mt-2 text-subtle-light dark:text-subtle-dark">
                Ask about your birth chart, transits, or anything else you're curious about.
              </p>
            </div>
          </div>
        ) : (
          messages.map((message, index) => (
            <div 
              key={index}
              className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
            >
              <div 
                className={`max-w-[80%] rounded-lg p-4 ${
                  message.type === 'user' 
                    ? 'bg-primary text-white'
                    : message.type === 'system'
                      ? 'bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-200'
                      : 'bg-white dark:bg-gray-800 shadow-sm'
                }`}
              >
                <p className="text-sm">{message.content}</p>
                {message.model && (
                  <p className="mt-1 text-xs opacity-70">
                    Generated by {message.model}
                  </p>
                )}
              </div>
            </div>
          ))
        )}
        {isLoading && (
          <div className="flex justify-start">
            <div className="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm max-w-[80%]">
              <div className="flex space-x-2">
                <div className="w-2 h-2 bg-primary rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                <div className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: '0.4s' }}></div>
              </div>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>
      
      <div className="p-4 border-t border-border-light dark:border-border-dark">
        {/* Daily Limit Warning */}
        {chatMessagesToday >= chatLimit * 0.8 && (
          <div className={`mb-5 p-5 rounded-lg border-2 ${
            canSendMessage 
              ? 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 text-yellow-800 dark:text-yellow-200'
              : 'bg-red-50 dark:bg-red-900/20 border-red-200 text-red-800 dark:text-red-200'
          }`}>
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <svg className="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
                <span className="font-medium text-base">
                  {canSendMessage 
                    ? `${chatMessagesToday} of ${chatLimit} daily messages used`
                    : `Daily limit reached (${chatLimit} messages)`
                  }
                </span>
              </div>
              {!canSendMessage && (
                <button
                  onClick={() => setShowUpgradeModal(true)}
                  className="px-5 py-2 bg-primary border-2 border-primary text-white rounded-lg hover:shadow-soft-lg transition-all text-base font-medium transform hover:scale-105"
                >
                  Upgrade
                </button>
              )}
            </div>
          </div>
        )}
        
        <form onSubmit={sendMessage} className="flex gap-3">
          <input
            type="text"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            placeholder={canSendMessage ? "Ask me anything..." : "Daily limit reached - upgrade to continue"}
            className="flex-1 rounded-lg border-2 border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-4 focus:ring-primary/10 focus:border-primary hover:border-gray-300 transition-all px-5 py-4 text-lg"
            disabled={isLoading || !canSendMessage}
          />
          <button
            type="submit"
            className="bg-primary border-2 border-primary text-white px-6 py-4 rounded-lg hover:shadow-soft-lg transition-all disabled:opacity-50 transform hover:scale-105"
            disabled={isLoading || !inputValue.trim() || !canSendMessage}
          >
            <span className="material-symbols-outlined text-2xl">
              arrow_upward
            </span>
          </button>
        </form>
        <p className="text-center text-base text-gray-500 dark:text-gray-400 mt-5">
          Powered by Claude Sonnet 4 â€¢ {userTier === 'free' ? `${chatLimit} free messages daily` : userTier === 'premium' ? `${chatLimit} messages daily` : 'Unlimited conversations'}
        </p>
      </div>
      
      {/* Upgrade Modal */}
      {showUpgradeModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/70">
          <div className="bg-white dark:bg-gray-800 border border-gray-100 rounded-xl p-10 max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-soft-xl">
            <div className="flex justify-between items-start mb-8">
              <h2 className="text-4xl font-bold text-gray-900 dark:text-white">Upgrade Your Experience</h2>
              <button
                onClick={() => setShowUpgradeModal(false)}
                className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 p-2"
              >
                <svg className="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            
            <p className="text-lg text-gray-600 dark:text-gray-300 mb-10 leading-relaxed">
              You've reached your daily chat limit. Upgrade to continue conversations with your AI astrologer and unlock premium features.
            </p>
            
            <div className="grid md:grid-cols-3 gap-8">
              {/* Free Tier */}
              <div className="border-2 border-gray-200 dark:border-gray-700 rounded-lg p-8">
                <div className="text-center mb-6">
                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white">Free</h3>
                  <div className="mt-3">
                    <span className="text-5xl font-bold text-gray-900 dark:text-white">$0</span>
                    <span className="text-lg text-gray-500 dark:text-gray-400">/month</span>
                  </div>
                </div>
                <ul className="space-y-4 mb-8">
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">5 AI chats per day</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Basic questionnaire (5 sections)</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Limited insights</span>
                  </li>
                </ul>
                <button
                  disabled
                  className="w-full py-4 px-6 bg-gray-300 dark:bg-gray-700 text-gray-500 dark:text-gray-400 rounded-lg cursor-not-allowed text-lg font-medium"
                >
                  Current Plan
                </button>
              </div>
              
              {/* Premium Tier */}
              <div className="border-2 border-primary rounded-lg p-8 relative shadow-soft-lg transform scale-105">
                <div className="absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
                  <span className="bg-primary text-white px-6 py-2 rounded-full text-base font-semibold">
                    POPULAR
                  </span>
                </div>
                <div className="text-center mb-6 mt-4">
                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white">Premium</h3>
                  <div className="mt-3">
                    <span className="text-5xl font-bold text-gray-900 dark:text-white">$19</span>
                    <span className="text-lg text-gray-500 dark:text-gray-400">/month</span>
                  </div>
                </div>
                <ul className="space-y-4 mb-8">
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">25 AI chats per day</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Full questionnaire (9 sections)</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Advanced pattern analysis</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Crystal recommendations</span>
                  </li>
                </ul>
                <button className="w-full py-4 px-6 bg-primary border-2 border-primary text-white rounded-lg hover:shadow-soft-lg transition-all transform hover:scale-105 text-lg font-medium">
                  Upgrade to Premium
                </button>
              </div>
              
              {/* Pro Tier */}
              <div className="border-2 border-gray-200 dark:border-gray-700 rounded-lg p-8">
                <div className="text-center mb-6">
                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white">Pro</h3>
                  <div className="mt-3">
                    <span className="text-5xl font-bold text-gray-900 dark:text-white">$49</span>
                    <span className="text-lg text-gray-500 dark:text-gray-400">/month</span>
                  </div>
                </div>
                <ul className="space-y-4 mb-8">
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">100 AI chats per day</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">All Premium features</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Priority AI responses</span>
                  </li>
                  <li className="flex items-start gap-3">
                    <svg className="h-6 w-6 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                    <span className="text-base text-gray-600 dark:text-gray-300">Export reports</span>
                  </li>
                </ul>
                <button className="w-full py-4 px-6 bg-cosmic-gold border-2 border-cosmic-gold text-white rounded-lg hover:shadow-soft-lg transition-all transform hover:scale-105 text-lg font-medium">
                  Upgrade to Pro
                </button>
              </div>
            </div>
            
            <div className="mt-10 text-center">
              <p className="text-base text-gray-500 dark:text-gray-400">
                All plans include access to Dashboard, Journal, Goals, and Crystal features
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AIChatInterface;